service: aws_tagging
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2

  stackTags: # will cascade down to all resources created in the stack
    stackTag1: value1
    stackTag2: value2

  tags: # will apply to all Lambdas and API Gateway's APIs
    providerTag1: bar
    providerTag2: qux

  deploymentBucket:
    tags: # will apply to the S3 bucket used for deployment
      deploymentBucketTag1: value1
      deploymentBucketTag2: value2

functions:
  hello:
    handler: handler.hello
    tags: # will apply to the Lambda, but not API Gateway's API
      funcTag1: bar

resources:
  Resources:
    UserPool1:
      Type: AWS::Cognito::UserPool
      DeletionPolicy: Delete
      Properties:
        UserPoolTags:
          {
            "directPoolTag1": "value",
            "directPoolTag2": "value"
          }
    WebCognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: web
        UserPoolId: !Ref UserPool1
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        PreventUserExistenceErrors: ENABLED
    s3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        Tags:
          - Key: directS3Tag
            Value: value
    dynamodbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: postcode
            AttributeType: S
        KeySchema:
          - AttributeName: postcode
            KeyType: HASH
        Tags:
          - Key: directDdbTag1
            Value: value1
          - Key: directDdbTag2
            Value: value2
